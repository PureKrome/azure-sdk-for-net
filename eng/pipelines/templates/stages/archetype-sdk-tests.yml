parameters:
- name: AdditionalPlatforms
  type: object
  default: {}
- name: Clouds
  type: string
  default: 'Public,Canary'
- name: PreSteps
  type: object
  default: []
- name: PostSteps
  type: object
  default: []
- name: EnvVars
  type: object
  default: {}
- name: MaxParallel
  type: number
  default: 0
- name: BuildInParallel
  type: boolean
  default: true
- name: TimeoutInMinutes
  type: number
  default: 60
- name: Location
  type: string
  default: ''
- name: ServiceDirectory
  type: string
  default: not-specified
- name: TestSetupSteps
  type: stepList
  default: []
- name: CloudConfig
  type: object
  default:
    Public:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-test)
    Preview:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview-test)
    Canary:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources-preview-test)
      Location: 'eastus2euap'
    UsGov:
      SubscriptionConfiguration: $(sub-config-gov-test-resources-test)
    China:
      SubscriptionConfiguration: $(sub-config-cn-test-resources-test)
- name: Platforms
  type: object
  default:
    Linux_NetCore:
      OSVmImage: "ubuntu-18.04"
      TestTargetFramework: netcoreapp2.1
    Windows_NetCore:
      OSVmImage: "windows-2019"
      TestTargetFramework: netcoreapp2.1
    Windows_NetCore_ProjectRefAzureClients:
      OSVmImage: "windows-2019"
      TestTargetFramework: netcoreapp2.1
      AdditionalTestArguments: /p:UseProjectReferenceToAzureClients=true
    Windows_NetFramework:
      OSVmImage: "windows-2019"
      TestTargetFramework: net461
    Windows_NetFramework_ProjectRefAzureClients:
      OSVmImage: "windows-2019"
      TestTargetFramework: net461
      AdditionalTestArguments: /p:UseProjectReferenceToAzureClients=true
    MacOS:
      OSVmImage: "macOS-10.15"
      TestTargetFramework: netcoreapp2.1
      SupportedClouds: 'Public'
    Windows_NetCore_Record:
      OSVmImage: "windows-2019"
      TestMode: Record
      TestTargetFramework: netcoreapp2.1
      AdditionalTestArguments: /p:AutoUpdateSessionRecords=true
      SupportedClouds: 'AzureCloud'
    Linux_NetCore_Keyring:
      OSVmImage: "ubuntu-18.04"
      TestTargetFramework: 'netcoreapp2.1'
      SupportedClouds: 'Public,Canary,Preview'
- name: PlatformPreSteps
  type: object
  default:
    - template: /eng/common/pipelines/templates/steps/bypass-local-dns.yml
      condition: eq($(System.JobName), 'Linux_NetCore')
    - script: sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
      displayName: Bypass local DNS server to workaround issue resolving cognitiveservices names
      condition: |
        and(
          succeededOrFailed(),
          eq(variables['OSVmImage'], 'ubuntu-18.04'),
          eq($(System.JobName), 'Linux_NetCore')
        )
- name: PlatformPostSteps
  type: object
  default:
    - task: CopyFiles@2
      condition: eq($(System.JobName), 'Windows_NetCore_Record')
      displayName: "Copy Test Recordings"
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: 'sdk/$(ServiceDirectory)/**/SessionRecords/**/*.json'
        targetFolder: '$(Build.ArtifactStagingDirectory)/SessionRecords'
    - task: PublishBuildArtifacts@1
      condition: eq($(System.JobName), 'Windows_NetCore_Record')
      displayName: "Publish Test Recordings"
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/SessionRecords'
        artifactName: SessionRecords


stages:
- ${{ each cloud in parameters.CloudConfig }}:
  - ${{ if contains(parameters.Clouds, cloud.key) }}:
    - stage: ${{ cloud.key }}
      dependsOn: []
      jobs:
      - template: ../jobs/archetype-sdk-tests-jobs.yml
        parameters:
          PreSteps:
            #- ${{ parameters.PlatformPreSteps }}
            - ${{ parameters.PreSteps }}
          PostSteps:
            - ${{ parameters.PlatformPostSteps }}
            - ${{ parameters.PostSteps }}
          EnvVars: ${{ parameters.EnvVars }}
          MaxParallel: ${{ parameters.MaxParallel }}
          BuildInParallel: ${{ parameters.BuildInParallel }}
          TimeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
          Location: ${{ parameters.Location }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          TestSetupSteps: ${{ parameters.TestSetupSteps }}
          Platforms:
            ${{ each platform in parameters.Platforms }}:
              ${{ if contains(coalesce(platform.value.SupportedClouds, parameters.Clouds), cloud.key) }}:
                ${{ platform.key }}: ${{ platform.value }}
                #${{ each platform in parameters.AdditionalPlatforms }}:
                #  ${{ if contains(coalesce(platform.value.SupportedClouds, parameters.Clouds), cloud.key) }}:
                #    ${{ platform.key }}: ${{ platform.value }}
          CloudConfig:
            SubscriptionConfiguration: ${{ cloud.value.SubscriptionConfiguration }}
            Location: ${{ coalesce(parameters.Location, cloud.value.Location) }}
